# This file defines the Grafana deployment and service for the monitoring stack.
# Grafana provides visualization dashboards for metrics collected by Prometheus
# to help monitor the health and performance of the Endpoint Statistics application.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: endpoint-stats
spec:
  replicas: 1  # Single instance is sufficient for a small deployment
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
      - name: init-chmod-data
        image: busybox:1.35.0
        command: ["sh", "-c", "mkdir -p /var/lib/grafana/plugins && chmod -R 777 /var/lib/grafana"]
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      containers:
      - name: grafana
        image: grafana/grafana:9.5.5  # Stable Grafana version
        ports:
        - containerPort: 3000  # Default Grafana web UI port
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secrets  # Reference to the admin password secret
              key: admin-password
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"  # Default admin username
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel"  # Pre-install useful visualization panel
        - name: GF_DASHBOARDS_MIN_REFRESH_INTERVAL
          value: "5s"  # Allow dashboards to refresh as frequently as 5 seconds
        - name: GF_PATHS_PROVISIONING
          value: "/etc/grafana/provisioning"  # Explicitly set the provisioning path
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana  # Persistent storage for Grafana data
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources  # Auto-provision datasources
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards  # Auto-provision dashboard provider config
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards  # Location for dashboard definitions
        resources:
          requests:
            memory: "256Mi"  # Minimum memory required for Grafana
            cpu: "100m"      # 0.1 CPU cores, sufficient for small setups
          limits:
            memory: "512Mi"  # Memory limit to prevent excessive usage
            cpu: "200m"      # CPU limit to prevent resource starvation
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc  # Reference to the PVC for Grafana data
      - name: grafana-datasources
        configMap:
          name: grafana-datasources  # Datasources ConfigMap
      - name: grafana-dashboards-config
        configMap:
          name: grafana-dashboards  # Dashboard provider config
          items:
          - key: dashboards.yaml    # Using specific key from ConfigMap
            path: dashboards.yaml   # Path in the container to mount it
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards  # Dashboard definitions
          items:
          - key: endpoint-stats-dashboard.json  # Using specific key from ConfigMap
            path: endpoint-stats-dashboard.json # Path in the container to mount it

---
# Service to expose Grafana internally in the cluster
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: endpoint-stats
spec:
  selector:
    app: grafana  # Selects pods with the app=grafana label
  ports:
  - port: 3000    # Port the service exposes
    targetPort: 3000  # Port in the container to forward to
  type: ClusterIP  # Internal-only access, not exposed outside the cluster
