apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"flask-api","namespace":"endpoint-stats"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"flask-api"}},"template":{"metadata":{"annotations":{"prometheus.io/path":"/metrics","prometheus.io/port":"9999","prometheus.io/scrape":"true"},"labels":{"app":"flask-api"}},"spec":{"containers":[{"env":[{"name":"DATABASE_URL","value":"postgresql://postgres:postgres@postgres:5432/postgres"},{"name":"REDIS_URL","value":"redis://redis:6379/0"}],"envFrom":[{"secretRef":{"name":"flask-api-secret"}}],"image":"endpoint-stats:v2","imagePullPolicy":"Never","livenessProbe":{"httpGet":{"path":"/health","port":9999},"initialDelaySeconds":5,"periodSeconds":10},"name":"flask-api","ports":[{"containerPort":9999}],"resources":{"limits":{"cpu":"100m","memory":"100Mi"},"requests":{"cpu":"100m","memory":"100Mi"}}}]}}}}
  creationTimestamp: "2025-04-11T13:31:26Z"
  generation: 1
  name: flask-api
  namespace: endpoint-stats
  resourceVersion: "143837"
  uid: 49e33718-d46d-4b01-b7a6-cd7f5a6e3d0a
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: flask-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9999"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: flask-api
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          value: postgresql://postgres:postgres@postgres:5432/postgres
        - name: REDIS_URL
          value: redis://redis:6379/0
        envFrom:
        - secretRef:
            name: flask-api-secret
        image: endpoint-stats:v2
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 9999
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: flask-api
        ports:
        - containerPort: 9999
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2025-04-11T13:31:26Z"
    lastUpdateTime: "2025-04-11T13:31:26Z"
    message: ReplicaSet "flask-api-6c6dcbcccc" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-04-17T06:07:59Z"
    lastUpdateTime: "2025-04-17T06:07:59Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
