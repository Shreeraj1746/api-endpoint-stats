# This file defines the Flask API deployment and service for the Endpoint Statistics application.
# The Flask API is the main application component that tracks endpoint access counts,
# exposes metrics for monitoring, and provides REST API endpoints for statistics.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-api
  namespace: endpoint-stats
spec:
  replicas: 3  # Increased for high availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: flask-api
  template:
    metadata:
      labels:
        app: flask-api
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9999"
    spec:
      serviceAccountName: endpoint-stats-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: flask-api
          image: endpoint-stats:v2
          imagePullPolicy: Never
          ports:
            - containerPort: 9999
              name: http
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 9999
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 9999
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres:5432/postgres
            - name: REDIS_URL
              value: redis://redis:6379/0
          envFrom:
            - secretRef:
                name: flask-api-secret
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: api-config
              mountPath: /app/config
              readOnly: true
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"]
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: api-config
          configMap:
            name: api-config
---
# Service to expose the Flask API within the cluster
apiVersion: v1
kind: Service
metadata:
  name: flask-api
  namespace: endpoint-stats
  labels:
    app: flask-api  # Add this label to the service
spec:
  selector:
    app: flask-api  # Match pods with this label
  ports:
    - protocol: TCP
      port: 9999  # Port the service exposes
      targetPort: 9999  # Port to forward to in the pods
