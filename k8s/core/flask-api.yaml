# This file defines the Flask API deployment and service for the Endpoint Statistics application.
# The Flask API is the main application component that tracks endpoint access counts,
# exposes metrics for monitoring, and provides REST API endpoints for statistics.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-api
  namespace: endpoint-stats
spec:
  replicas: 2  # Run two instances for high availability
  selector:
    matchLabels:
      app: flask-api
  template:
    metadata:
      labels:
        app: flask-api  # Label used by service for routing traffic
      annotations:
        prometheus.io/scrape: "true"  # Enable Prometheus scraping
        prometheus.io/path: "/metrics"  # Path where metrics are exposed
        prometheus.io/port: "9999"  # Port where metrics are exposed
    spec:
      containers:
        - name: flask-api
          image: endpoint-stats:v2  # Use versioned tag to avoid cache issues
          imagePullPolicy: Never  # For local Minikube development only
          ports:
            - containerPort: 9999  # Port the container listens on
          resources:
            requests:
              cpu: 100m     # Minimum CPU required for Flask
              memory: 100Mi  # Minimum memory required for Flask
            limits:
              cpu: 100m     # Maximum CPU allowed
              memory: 100Mi  # Maximum memory allowed
          livenessProbe:  # Ensures container is restarted if it becomes unresponsive
            httpGet:
              path: /health  # Health check endpoint
              port: 9999
            initialDelaySeconds: 5  # Wait time before first probe
            periodSeconds: 10  # Frequency of probes
          env:
            - name: DATABASE_URL  # Connection string for PostgreSQL
              value: postgresql://postgres:postgres@postgres:5432/postgres
            - name: REDIS_URL  # Connection string for Redis
              value: redis://redis:6379/0
          envFrom:
            - secretRef:
                name: flask-api-secret  # Reference to the Secret for credentials
---
# Service to expose the Flask API within the cluster
apiVersion: v1
kind: Service
metadata:
  name: flask-api
  namespace: endpoint-stats
  labels:
    app: flask-api  # Add this label to the service
spec:
  selector:
    app: flask-api  # Match pods with this label
  ports:
    - protocol: TCP
      port: 9999  # Port the service exposes
      targetPort: 9999  # Port to forward to in the pods
