# Kubernetes Persistent Storage
#
# This file defines both PersistentVolumes (PVs) and PersistentVolumeClaims (PVCs) for our application.
#
# Why both PVs and PVCs are needed:
# - PersistentVolume (PV): Represents the actual physical storage resource in the cluster.
#   It's a cluster-wide resource that exists independently of any pod.
# - PersistentVolumeClaim (PVC): A request for storage by a user/application.
#   It's namespace-specific and used by pods to claim a portion of a PV.
#
# How PVs and PVCs are linked:
# PVs and PVCs are linked through a binding process based on:
# 1. Storage Class: Both postgres-pv and postgres-pvc specify "standard" storageClassName
# 2. Access Modes: Both must have compatible access modes (ReadWriteOnce in this case)
# 3. Capacity: The PV must have sufficient capacity to satisfy the PVC's request
#
# When a PVC is created, Kubernetes looks for an available PV that matches these criteria.
# If found, the PV is bound to the PVC. The binding is exclusive - once bound, a PV
# cannot be bound to another PVC until released.
#
# In our deployment files, pods reference the PVC by name (e.g., "postgres-pvc"), not the PV directly.
# This abstraction allows storage implementation details to change without affecting the application.

# This file defines persistent volumes for stateful components of the application.
# Persistent storage is crucial for maintaining data across pod restarts or
# rescheduling events, ensuring data durability and availability.
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv  # Persistent volume for PostgreSQL database
  namespace: endpoint-stats
spec:
  accessModes:
    - ReadWriteOnce  # Only one node can mount the volume as read-write
  capacity:
    storage: 100Mi   # Storage capacity for the PostgreSQL database
  hostPath:
    path: /data/postgres-pv  # Path on the host where data is stored
  storageClassName: standard  # Default storage class

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc  # Name referenced by the PostgreSQL deployment
  namespace: endpoint-stats
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi  # Must match or be less than the PV capacity
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv  # Persistent volume for Redis cache
  namespace: endpoint-stats
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 100Mi  # Storage capacity for Redis data
  hostPath:
    path: /data/redis-pv  # Path on the host where data is stored
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc  # Name referenced by the Redis deployment
  namespace: endpoint-stats
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi  # Must match or be less than the PV capacity
  storageClassName: standard
